#! /usr/bin/env bash

set -e # prevent any kind of script failures

# COLORS
export OFF='\033[0m'
export RED='\033[0;31m'
export GREEN='\033[0;32m'
export BLUE='\033[0;34m'
export PURPLE='\033[0;35m'

# set RUBY_ENV to development (as a default) if not set
: "${RUBY_ENV:=development}"

export RUBY_ENV

# set the working directory to the root of the project
DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && cd .. && pwd )"
export DIR

# The name of the repository is the name of the directory (usually)
REPO_NAME=$(basename "$PWD")
export REPO_NAME

# set the ruby version to the one specified in the .ruby-version file
[ -z "$RBENV_VERSION" ] && RBENV_VERSION=$(cat "$DIR/.ruby-version")
export RBENV_VERSION

# set the path to include the rbenv shims if they exist
[ -d "/usr/share/rbenv/shims" ] && export PATH=/usr/share/rbenv/shims:$PATH

# detect OS version and architecture
if [[ "$OSTYPE" == "linux-gnu"* ]]; then
    PLATFORM="linux"
    VERSION=$(grep '^VERSION_CODENAME=' /etc/os-release | cut -d '=' -f2 || echo "unknown")
elif [[ "$OSTYPE" == "darwin"* ]]; then
    PLATFORM="macos"
    VERSION=$(sw_vers -productVersion || echo "unknown")
else
    PLATFORM="unknown"
    VERSION="unknown"
fi

ARCH=$(uname -m || echo "unknown")

export PLATFORM
export VERSION
export ARCH

shopt -s nocasematch # enable case-insensitive matching
if [[ "$RUBY_ENV" == "production" ]]; then
  export BUNDLE_WITHOUT="development"
fi
shopt -u nocasematch # disable case-insensitive matching

# make the vendor/cache directory if it doesn't exist
mkdir -p "$DIR/vendor/cache"
